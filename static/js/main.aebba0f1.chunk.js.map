{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FormInput/FormInput.jsx","types.js","components/FormTextarea/FormTextarea.jsx","components/NewMovie/NewMovie.jsx","App.jsx","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","FormInput","PropTypes","string","isRequired","func","bool","inputId","value","action","validator","inputClass","classNames","htmlFor","id","type","placeholder","onChange","FormTextarea","aria-label","NewMovie","state","isButtonDisabled","isTitleValid","isImgUrlValid","isImdbUrlValid","isImdbIdValid","setMovieTitle","event","currentValue","target","length","trim","setState","setMovieDescription","setMovieimgUrl","RegExp","test","setMovieimdbUrl","setMovieimdbId","onMovieAdd","preventDefault","addMovie","props","this","buttonClass","btn","disabled","onSubmit","Component","App","moviesFromServer","currState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aebba0f1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputShape } from '../../types';\n\nexport const FormInput = ({\n  title,\n  inputId,\n  value,\n  action,\n  validator,\n}) => {\n  const inputClass = classNames({\n    'form-control': true,\n    'is-invalid': validator === false,\n    'is-valid': validator === true,\n  });\n\n  return (\n    <div className=\"input-group mb-3\">\n      <label className=\"input-group-text\" htmlFor={inputId}>\n        {title}\n      </label>\n      <input\n        id={inputId}\n        type=\"text\"\n        className={inputClass}\n        placeholder=\"write here\"\n        value={value}\n        onChange={action}\n      />\n      <div className=\"valid-feedback\">\n        Looks good!\n      </div>\n      <div className=\"invalid-feedback\">\n        {`Please provide a valid ${title}.`}\n      </div>\n    </div>\n  );\n};\n\nFormInput.propTypes = InputShape;\n","import PropTypes from 'prop-types';\n\nexport const InputShape = {\n  title: PropTypes.string.isRequired,\n  inputId: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n  validator: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport { InputShape } from '../../types';\n\nexport const FormTextarea = ({\n  title,\n  inputId,\n  value,\n  action,\n}) => (\n  <div className=\"input-group mb-3\">\n    <label className=\"input-group-text\" htmlFor={inputId}>\n      {title}\n    </label>\n    <textarea\n      id={inputId}\n      className=\"form-control\"\n      aria-label=\"With textarea\"\n      value={value}\n      onChange={action}\n    />\n  </div>\n);\n\nFormTextarea.propTypes = InputShape;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormInput } from '../FormInput';\nimport { FormTextarea } from '../FormTextarea';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isButtonDisabled: false,\n    isTitleValid: null,\n    isImgUrlValid: null,\n    isImdbUrlValid: null,\n    isImdbIdValid: null,\n  };\n\n  setMovieTitle = (event) => {\n    const currentValue = event.target.value;\n\n    if (currentValue.length < 1\n      || currentValue.trim().length < 1) {\n      this.setState({\n        isTitleValid: false,\n        isButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        isTitleValid: true,\n        isButtonDisabled: false,\n      });\n    }\n\n    this.setState({ title: currentValue });\n  }\n\n  setMovieDescription = (event) => {\n    this.setState({ description: event.target.value });\n  }\n\n  setMovieimgUrl = (event) => {\n    const currentValue = event.target.value;\n    const regEx = new RegExp('^((([A-Za-z]{3,9}:(?://)?)'\n    + '(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|'\n    + '(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)'\n    + '((?:/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)'\n    + '#?(?:[.!/\\\\\\\\w]*))?)$');\n\n    if (!regEx.test(currentValue)) {\n      this.setState({\n        isImgUrlValid: false,\n        isButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        isImgUrlValid: true,\n        isButtonDisabled: false,\n      });\n    }\n\n    this.setState({ imgUrl: currentValue });\n  }\n\n  setMovieimdbUrl = (event) => {\n    const currentValue = event.target.value;\n    const regEx = new RegExp('^((([A-Za-z]{3,9}:(?://)?)'\n    + '(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|'\n    + '(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)'\n    + '((?:/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)'\n    + '#?(?:[.!/\\\\\\\\w]*))?)$');\n\n    if (!regEx.test(currentValue)) {\n      this.setState({\n        isImdbUrlValid: false,\n        isButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        isImdbUrlValid: true,\n        isButtonDisabled: false,\n      });\n    }\n\n    this.setState({ imdbUrl: currentValue });\n  }\n\n  setMovieimdbId = (event) => {\n    const currentValue = event.target.value;\n\n    if (currentValue.length < 1\n      || currentValue.trim().length < 1) {\n      this.setState({\n        isImdbIdValid: false,\n        isButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        isImdbIdValid: true,\n        isButtonDisabled: false,\n      });\n    }\n\n    this.setState({ imdbId: currentValue });\n  }\n\n  onMovieAdd = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n    const { addMovie } = this.props;\n\n    if (title === '') {\n      this.setState({\n        isTitleValid: false,\n        isButtonDisabled: true,\n      });\n\n      return;\n    }\n\n    if (imgUrl === '') {\n      this.setState({\n        isImgUrlValid: false,\n        isButtonDisabled: true,\n      });\n\n      return;\n    }\n\n    if (imdbUrl === '') {\n      this.setState({\n        isImdbUrlValid: false,\n        isButtonDisabled: true,\n      });\n\n      return;\n    }\n\n    if (imdbId === '') {\n      this.setState({\n        isImdbIdValid: false,\n        isButtonDisabled: true,\n      });\n\n      return;\n    }\n\n    const currentMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(currentMovie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isTitleValid: null,\n      isImgUrlValid: null,\n      isImdbUrlValid: null,\n      isImdbIdValid: null,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isButtonDisabled,\n      isTitleValid,\n      isImgUrlValid,\n      isImdbUrlValid,\n      isImdbIdValid,\n    } = this.state;\n    const buttonClass = classNames({\n      btn: true,\n      'btn-primary': true,\n      disabled: isButtonDisabled,\n    });\n\n    return (\n      <form\n        className=\"row g-3 needs-validation\"\n        onSubmit={event => this.onMovieAdd(event)}\n      >\n        <FormInput\n          title=\"Title\"\n          inputId=\"title-input\"\n          value={title}\n          action={this.setMovieTitle}\n          validator={isTitleValid}\n        />\n        <FormTextarea\n          title=\"Description\"\n          inputId=\"description-textarea\"\n          value={description}\n          action={this.setMovieDescription}\n        />\n        <FormInput\n          title=\"imgUrl\"\n          inputId=\"imgUrl-input\"\n          value={imgUrl}\n          action={this.setMovieimgUrl}\n          validator={isImgUrlValid}\n        />\n        <FormInput\n          title=\"imdbUrl\"\n          inputId=\"imdbUrl-input\"\n          value={imdbUrl}\n          action={this.setMovieimdbUrl}\n          validator={isImdbUrlValid}\n        />\n        <FormInput\n          title=\"imdbId\"\n          inputId=\"imdbId-input\"\n          value={imdbId}\n          action={this.setMovieimdbId}\n          validator={isImdbIdValid}\n        />\n        <button\n          type=\"submit\"\n          className={buttonClass}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(currState => ({\n      movies: [...currState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}